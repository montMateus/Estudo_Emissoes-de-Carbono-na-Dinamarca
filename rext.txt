WITH summary AS (
    SELECT 
        '2021' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc) AS hour_grouped,
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2) AS total_direct_carbon_emission,
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2) AS total_lca_carbon_emission,
        ROUND(AVG(renewable_percentage)::NUMERIC, 2) AS avg_renewable_percentage,
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2) AS avg_low_carbon_percentage
    FROM denmark.year_2021_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2021' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc) AS hour_grouped,
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM finland.year_2021_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2021' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM iceland.year_2021_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2021' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM sweden.year_2021_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2021' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM norway.year_2021_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2022' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc) AS hour_grouped,
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2) AS total_direct_carbon_emission,
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2) AS total_lca_carbon_emission,
        ROUND(AVG(renewable_percentage)::NUMERIC, 2) AS avg_renewable_percentage,
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2) AS avg_low_carbon_percentage
    FROM denmark.year_2022_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2022' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc) AS hour_grouped,
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM finland.year_2022_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2022' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM iceland.year_2022_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2022' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM sweden.year_2022_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2022' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM norway.year_2022_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2023' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc) AS hour_grouped,
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2) AS total_direct_carbon_emission,
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2) AS total_lca_carbon_emission,
        ROUND(AVG(renewable_percentage)::NUMERIC, 2) AS avg_renewable_percentage,
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2) AS avg_low_carbon_percentage
    FROM denmark.year_2023_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2023' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc) AS hour_grouped,
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM finland.year_2023_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2023' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM iceland.year_2023_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2023' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM sweden.year_2023_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2023' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM norway.year_2023_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2024' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc) AS hour_grouped,
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2) AS total_direct_carbon_emission,
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2) AS total_lca_carbon_emission,
        ROUND(AVG(renewable_percentage)::NUMERIC, 2) AS avg_renewable_percentage,
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2) AS avg_low_carbon_percentage
    FROM denmark.year_2024_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2024' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc) AS hour_grouped,
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM finland.year_2024_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2024' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM iceland.year_2024_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2024' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM sweden.year_2024_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)

    UNION ALL

    SELECT 
        '2024' AS year_,
        country,
        zone_id,
        EXTRACT(HOUR FROM datetime_utc),
        ROUND(SUM(carbon_intensity_direct)::NUMERIC, 2),
        ROUND(SUM(carbon_intensity_lca)::NUMERIC, 2),
        ROUND(AVG(renewable_percentage)::NUMERIC, 2),
        ROUND(AVG(low_carbon_percentage)::NUMERIC, 2)
    FROM norway.year_2024_hourly
    GROUP BY country, zone_id, EXTRACT(HOUR FROM datetime_utc)
),
with_differences AS (
    SELECT 
        *,
        LEAD(total_direct_carbon_emission) OVER (PARTITION BY country, zone_id, hour_grouped ORDER BY year_) AS next_direct_carbon_emission,
        LEAD(total_lca_carbon_emission) OVER (PARTITION BY country, zone_id, hour_grouped ORDER BY year_) AS next_lca_carbon_emission
    FROM summary
)

SELECT 
    year_,
    country,
    zone_id,
    hour_grouped,
    total_direct_carbon_emission,
    next_direct_carbon_emission,
    CASE 
        WHEN next_direct_carbon_emission IS NOT NULL AND total_direct_carbon_emission != 0 
        THEN ROUND(((next_direct_carbon_emission - total_direct_carbon_emission) / total_direct_carbon_emission) * 100::NUMERIC, 2)
        ELSE NULL 
    END AS direct_decrease_or_increase,
    total_lca_carbon_emission,
    next_lca_carbon_emission,
    CASE 
        WHEN next_lca_carbon_emission IS NOT NULL AND total_lca_carbon_emission != 0 
        THEN ROUND(((next_lca_carbon_emission - total_lca_carbon_emission) / total_lca_carbon_emission) * 100::NUMERIC, 2)
        ELSE NULL 
    END AS lca_decrease_or_increase,
    avg_renewable_percentage,
    avg_low_carbon_percentage
FROM with_differences
ORDER BY country, hour_grouped, year_;